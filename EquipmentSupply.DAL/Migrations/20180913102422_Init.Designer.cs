// <auto-generated />
using System;
using EquipmentSupply.DAL.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EquipmentSupply.DAL.Migrations
{
    [DbContext(typeof(DbSuppliesContext))]
    [Migration("20180913102422_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EquipmentSupply.Domain.Models.DB.EquipmentType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("EquipmentTypes");
                });

            modelBuilder.Entity("EquipmentSupply.Domain.Models.DB.NotificationQueue", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("Date");

                    b.Property<int>("OperationType");

                    b.Property<DateTimeOffset?>("SendDate");

                    b.Property<long>("SupplyId");

                    b.HasKey("Id");

                    b.HasIndex("SupplyId");

                    b.ToTable("NotificationQueues");
                });

            modelBuilder.Entity("EquipmentSupply.Domain.Models.DB.Provider", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("EquipmentSupply.Domain.Models.DB.Supply", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Count");

                    b.Property<long>("EquipmentTypeId");

                    b.Property<bool>("IsDelete");

                    b.Property<DateTimeOffset>("ProvideDate");

                    b.Property<long>("ProviderId");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentTypeId");

                    b.HasIndex("ProviderId");

                    b.ToTable("Supplies");
                });

            modelBuilder.Entity("EquipmentSupply.Domain.Models.DB.NotificationQueue", b =>
                {
                    b.HasOne("EquipmentSupply.Domain.Models.DB.Supply", "Supply")
                        .WithMany("Notifications")
                        .HasForeignKey("SupplyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EquipmentSupply.Domain.Models.DB.Supply", b =>
                {
                    b.HasOne("EquipmentSupply.Domain.Models.DB.EquipmentType", "EquipmentType")
                        .WithMany("Supplies")
                        .HasForeignKey("EquipmentTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EquipmentSupply.Domain.Models.DB.Provider", "Provider")
                        .WithMany("Supplies")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
